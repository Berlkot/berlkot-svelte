generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Post {
  id          String    @id @default(uuid())
  thumbnail   Asset?    @relation(fields: [thumbnailId], references: [id])
  name        String    @unique
  title       String
  author      String    @default("Berlkot")
  content     String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  visibility  Int       @default(-1) // -1 admin 0 public 1 sub only
  tags        PostTag[]
  thumbnailId String?
}

model Asset {
  id            String          @id @default(uuid())
  name          String          @unique
  alt           String?
  type          Int             @default(0) // 0 image 1 video
  width         Int
  height        Int
  visibility    Int             @default(-1) // -1 admin 0 public 1 sub only
  posts         Post[]
  galleryPosts  GalleryPost[]
  PageInChapter PageInChapter[]
}

model GalleryPost {
  id               String          @id @default(uuid())
  name             String          @unique
  title            String?
  author           String          @default("Berlkot")
  assets           Asset[]
  creationDate     DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  smallDescription String?
  largeDescription String?
  copyright        String?         @default("CC BY-NC 4.0")
  contentWarning   String?
  effects          Json?
  maturity         Int             @default(0) // 0 sfw 1 questionable 2 nsfw
  visibility       Int             @default(-1) // -1 admin 0 public 1 sub only
  tags             GalleryTag[]
  folders          GalleryFolder[]
}

model Project {
  id        String    @id @default(uuid())
  name      String    @unique
  startDate DateTime
  endDate   DateTime?
  content   String
}

model Comic {
  id         String         @id @default(uuid())
  name       String         @unique
  chapters   ComicChapter[]
  maturity   Int            @default(0) // 0 sfw 1 questionable 2 nsfw
  visibility Int            @default(-1) // -1 admin 0 public 1 sub only
}

model ComicChapter {
  id            String          @id @default(uuid())
  comic         Comic           @relation(fields: [comicId], references: [id])
  visibility    Int             @default(-1) // -1 admin 0 public 1 sub only
  comicId       String
  PageInChapter PageInChapter[]
  createdAt     DateTime        @default(now())
}

model PageInChapter {
  chapter        ComicChapter @relation(fields: [comicChapterId], references: [id])
  page           Asset        @relation(fields: [assetId], references: [id])
  pageNumber     Int
  effects        Json?
  comicChapterId String
  assetId        String

  @@unique([comicChapterId, assetId])
}

model GalleryTag {
  id           String        @id @default(uuid())
  name         String        @unique
  galleryPosts GalleryPost[]
}

model GalleryFolder {
  id           String        @id @default(uuid())
  name         String        @unique
  galleryPosts GalleryPost[]
}

model PostTag {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

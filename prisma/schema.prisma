generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// sqlite driver finally supports enums yipee 
enum Visibility {
  ADMIN
  PUBLIC
  SUB_ONLY
}

enum ContentType {
  IMAGE
  VIDEO
}

enum Maturity {
  SFW
  QUESTIONABLE
  NSFW
}

model BlogPost {
  id          String    @id @default(uuid())
  heroImage   Asset?    @relation(fields: [heroImageId], references: [id])
  name        String    @unique
  title       String
  author      String    @default("Berlkot")
  content     String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  visibility  Visibility       @default(ADMIN)
  tags        BlogPostTag[]
  heroImageId String?
}

model Asset {
  id            String          @id @default(uuid())
  name          String          @unique
  alt           String?
  type          ContentType             @default(IMAGE)
  width         Int
  height        Int
  credit        String?
  visibility    Visibility      @default(ADMIN)
  posts         BlogPost[]
  galleryPosts  GalleryAsset[]
  PageInChapter PageInChapter[]
}

model GalleryPost {
  id               String          @id @default(uuid())
  name             String          @unique
  title            String?
  assets           GalleryAsset[]
  creationDate     DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  smallDescription String?
  largeDescription String?
  copyright        String?         @default("CC BY-NC 4.0")
  contentWarning   String?
  effects          Json?
  maturity         Maturity        @default(SFW)
  visibility       Visibility      @default(ADMIN)
  tags             GalleryTag[]
  folders          GalleryFolder[]
}

model GalleryAsset {
  galleryPost GalleryPost @relation(fields: [galleryId], references: [id])
  asset Asset @relation(fields: [assetId], references: [id])
  galleryId String
  assetId String
  order Int
  
  @@unique([galleryId, assetId])
}

// dummy model for now
model Project {
  id        String    @id @default(uuid())
  name      String    @unique
  startDate DateTime
  endDate   DateTime?
  content   String
}

model Comic {
  id         String         @id @default(uuid())
  name       String         @unique
  chapters   ComicChapter[]
  maturity   Maturity        @default(SFW)
  visibility Visibility      @default(ADMIN)
}

model ComicChapter {
  id            String          @id @default(uuid())
  comic         Comic           @relation(fields: [comicId], references: [id])
  visibility    Visibility      @default(ADMIN)
  comicId       String
  PageInChapter PageInChapter[]
  createdAt     DateTime        @default(now())
}

model PageInChapter {
  chapter        ComicChapter @relation(fields: [comicChapterId], references: [id])
  page           Asset        @relation(fields: [assetId], references: [id])
  pageNumber     Int
  effects        Json?
  comicChapterId String
  assetId        String

  @@unique([comicChapterId, assetId])
}

model GalleryTag {
  id           String        @id @default(uuid())
  name         String        @unique
  galleryPosts GalleryPost[]
}

model GalleryFolder {
  id           String        @id @default(uuid())
  name         String        @unique
  galleryPosts GalleryPost[]
}

model BlogPostTag {
  id    String @id @default(uuid())
  name  String @unique
  posts BlogPost[]
}
